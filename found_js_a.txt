[];
	$('data').rows[0].cells[11].innerHTML = build.getExtra();
	for (var l = 0; l < ml; l++) {
		var stat = build.getStat(l+1);
		var obj = { lvl: l+1 };
		for (var r = 0; r < 4; r++) {
			obj['res' + r] = stat.cost[r];
		}
		obj.res_sum = stat.cost.sum();
		obj.uc = stat.cu;
		obj.wh = stat.stores[0];
		obj.gr = stat.stores[1];
		obj.cp = stat.cp;
		obj.time = stat.time;
		obj.extra = build.get('benefit')(l+1);
		a.push(obj);
	}
	costModel.updateRecords(a);
	$('data_holder-title').innerHTML = build.get('name');
	var req = build.get('req') || {};
	var req_str = [];
	(function(req_str){
		var breq = build.get('breq') || {};
		for (var gid in breq) {
			var bHTML =
				"<a href='#' onclick='select_building("+gid+");return false;'>" +
				"<img class='icon--scalable building g" + gid + "' src='img/x.gif'> " +
				buildings.getByGid(+gid).get('name') + "</a>";
			if (breq[gid] > 0) {
				req_str.push(bHTML  + " " + breq[gid]);
			} else {
				req_str.push("<strike>" + bHTML  + "</strike>");
			}
		}
	})(req_str);
	if ('capital' in req) {
		if (req.capital == -1) {
			req_str.push("<strike>" + i18n.capital + "</strike>");
		} else if (req.capital == 1) {
			req_str.push(i18n.capital);
		}/* else {
			desc += "<br/>" + i18n.capital + ": " + req.capital + "+";
		}*/
	}
	if ('race' in req) {
		req_str.push(i18n.tribes + ": <img src='img/x.gif' class='icon--scalable tribe tribe-" + req.race + "'> " + i18n['race' + req.race]);
	}
	if (!req_str.length) req_str.push("<span class='none'>none</span>");
	$('data_holder-req').innerHTML = "<b>prerequiresites</b>: " + req_str.join(", ");
	$('data_holder-desc').innerHTML = build.get('desc');
	$('data_holder-icon').className = "building g" + build.gid;
	$('data_holder').style.display = "";
	state.b = build.gid;
	StateSaver.save();
}

StateSaver.bind(state, {b:'i', mb:'i', s:'s', n:'b', bs:'b', lvls:'a', ad:'b'});

function update_version() {
	var old_v = parseVersion(state.s),