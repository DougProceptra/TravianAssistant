=== Extracting Critical Travian Game Data ===

1. BUILDING DATA STRUCTURE (T5):
=================================

Main Building, Academy, Residence costs:
-----------------------------------------

2. CULTURE POINTS BY BUILDING:
===============================
    { t: timeB(16.9, 600) },
    // water ditch
    building({ id: ID.WATER_DITCH, c: [ 740, 850, 960, 620], k:1.28, u:4, cp:3, t:timeB(19, 300), m:20, e:9, y:3, b: {16:10, 20:20}, f: ditch, s: SLOT.DITCH }),
]);
t5buildings[ID.NATARIAN_WALL] = extend(t5buildings[ID.EARTH_WALL], {

3. TROOP COSTS (T5):
====================
Settler costs per tribe:

4. SERVER SPEEDS:
=================
import { extend } from '../utils';

import { Unit } from './base';
import { Building } from './base/buildings';

const d3 = (x: number) => x / 3;
const m2 = (x: number) => x * 2;

export function units3x(allUnits: Unit[][]) {
    return allUnits.map(raceUnits =>
        raceUnits.map(unit => 
            extend(unit, { t: d3, rt: d3, v: m2 })));
}

export function buildings3x(buildings: Building[]) {
    return buildings.map(building =>
        extend(building, {
            t: (level: number) => building.t(level) / 3
        }));
}
5. BUILDING TIME FORMULAS:
==========================
const time = (base: number, extra: number) => (mul: number[]) => (level: number) =>
    base * mul[level-1] + extra;
const timeA = (b: number) => time(b, 0)([
    1, 4.5, 15, 60, 120, 240, 360, 720, 1080, 1620,
    2160, 2700, 3240, 3960, 4500, 5400, 7200, 9000, 10800, 14400]);

// most buildings
const timeB = (base: number, extra=0) => time(base, extra)([
    3, 22.5, 48, 90, 210, 480, 720, 990, 1200, 1380,
    1680, 1980, 2340, 2640, 3060, 3420, 3960, 4680, 5400, 6120]);
// factories
const timeC = (extra = 0) => time(60, extra)([8, 25, 55, 140, 240]);

// wonder of the world
const timeW = () => time(300, 0)([
     12, 16, 20, 24, 28, 32, 36, 40, 44, 46,
     46, 47, 48, 48, 49, 50, 51, 51, 52, 53,
     54, 55, 57, 58, 59, 60, 62, 63, 64, 66,
     67, 69, 70, 72, 74, 75, 77, 79, 81, 83,
     85, 87, 89, 91, 93, 96, 98,100,103,105,
    107,110,113,115,118,121,123,126,129,132,
    135,138,141,144,147,150,154,157,160,164,
    167,171,174,178,181,185,189,193,196,200,
    204,208,212,216,220,225,229,233,237,242,
    246,251,255,260,264,269,274,278,288,576]);
--
    { t: timeA(24), f: prod },
    { t: timeA(22), f: prod, m: 20 },
    { t: timeA(30), f: prod },
    { t: timeA(20), f: prod,  c: [  75,  90,  85,   0], m: 20 },

6. TRIBE BONUSES:
=================

7. RESOURCE FIELD PRODUCTION:
==============================

8. CP REQUIREMENTS FOR VILLAGES:
=================================
src/components/Conq.tsx:            min="0" max="200" step="1" value={state.loyalty}
src/components/conq.redux.ts:        pop: 1000,
src/model/base/buildings.ts:    5, 9, 15, 22, 33, 50, 70, 100, 145, 200,
src/model/base/buildings.ts:    280, 375, 495, 635, 800, 1000, 1300, 1600, 2000, 2450, 3050][lvl];
src/model/base/buildings.ts:    building({id: ID.WOODJACK,      c: [  40, 100,  50,  60], k: 1.67, u: 2, cp:1, t:time(1780/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:20 }),
src/model/base/buildings.ts:    building({id: ID.CLAYPIT,       c: [  80,  40,  80,  50], k: 1.67, u: 2, cp:1, t:time(1660/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:21 }),
src/model/base/buildings.ts:    building({id: ID.IRONMINE,      c: [ 100,  80,  30,  60], k: 1.67, u: 3, cp:1, t:time(2350/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:20 }),
src/model/base/buildings.ts:    building({id: ID.CROPLAND,      c: [  70,  90,  70,  20], k: 1.67, u: 0, cp:1, t:time(1450/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:21 }),
src/model/base/buildings.ts:    building({id: ID.IRONFOUNDRY,   c: [ 200, 450, 510, 120], k: 1.80, u: 6, cp:1, t:time( 6480, 1.5,  2400), e:2, y:1, b: {[ID.IRONMINE]:10, [ID.MAIN_BUILDING]:5}, m:5, f: p5}),
src/model/base/buildings.ts:    building({id: ID.GRAINMILL,     c: [ 500, 440, 380,1240], k: 1.80, u: 3, cp:1, t:time( 4240, 1.5,  2400), e:2, y:1, b: {[ID.CROPLAND]:5,  [ID.MAIN_BUILDING]:5}, m:5, f: p5}),

=== KEY FINDINGS ===

Now let's look at the actual TypeScript interfaces...

9. BUILDING INTERFACE:
======================
export type Building = BMethods & BConfigured;
export default extend([
    building({id: ID.WOODJACK,      c: [  40, 100,  50,  60], k: 1.67, u: 2, cp:1, t:time(1780/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:20 }),
    building({id: ID.CLAYPIT,       c: [  80,  40,  80,  50], k: 1.67, u: 2, cp:1, t:time(1660/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:21 }),
    building({id: ID.IRONMINE,      c: [ 100,  80,  30,  60], k: 1.67, u: 3, cp:1, t:time(2350/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:20 }),
    building({id: ID.CROPLAND,      c: [  70,  90,  70,  20], k: 1.67, u: 0, cp:1, t:time(1450/3,1.6, 1000/3),e:1, y:1, f: prod, s: SLOT.RES, m:21 }),
    building({id: ID.SAWMILL,       c: [ 520, 380, 290,  90], k: 1.80, u: 4, cp:1, t:time( 5400, 1.5,  2400), e:2, y:1, b: {[ID.CLAYPIT]: 10, [ID.MAIN_BUILDING]:5}, m:5, f: p5}),
    building({id: ID.BRICKYARD,     c: [ 440, 480, 320,  50], k: 1.80, u: 3, cp:1, t:time( 5240, 1.5,  2400), e:2, y:1, b: {[ID.WOODJACK]:10, [ID.MAIN_BUILDING]:5}, m:5, f: p5}),
    building({id: ID.IRONFOUNDRY,   c: [ 200, 450, 510, 120], k: 1.80, u: 6, cp:1, t:time( 6480, 1.5,  2400), e:2, y:1, b: {[ID.IRONMINE]:10, [ID.MAIN_BUILDING]:5}, m:5, f: p5}),
    building({id: ID.GRAINMILL,     c: [ 500, 440, 380,1240], k: 1.80, u: 3, cp:1, t:time( 4240, 1.5,  2400), e:2, y:1, b: {[ID.CROPLAND]:5,  [ID.MAIN_BUILDING]:5}, m:5, f: p5}),
    building({id: ID.BAKERY,        c: [1200,1480, 870,1600], k: 1.80, u: 4, cp:1, t:time( 6080, 1.5,  2400), e:2, y:1, b: {[ID.CROPLAND]:10, [ID.GRAINMILL]:5, [ID.MAIN_BUILDING]:5}, m:5, f: p5}),
    building({id: ID.WAREHOUSE,     c: [ 130, 160,  90,  40], k: 1.28, u: 1, cp:1, t:time( 3875),             e:3, y:1, b: {[ID.MAIN_BUILDING]:1}, r:{m:true}, f: capacity}),
    building({id: ID.GRANARY,       c: [  80, 100,  70,  20], k: 1.28, u: 1, cp:1, t:time( 3475),             e:3, y:1, b: {[ID.MAIN_BUILDING]:1}, r:{m:true}, f: capacity}),
    building({id: ID.ARMORY,        c: [ 170, 200, 380, 130], k: 1.28, u: 4, cp:2, t:time( 3875),             e:12,y:2, b: {[ID.MAIN_BUILDING]:3, [ID.ACADEMY]:3}, f: mb_like}),
    building({id: ID.BLACKSMITH,    c: [ 130, 210, 410, 130], k: 1.28, u: 4, cp:2, t:time( 3875),             e:12,y:2, b: {[ID.MAIN_BUILDING]:3, [ID.ACADEMY]:1}, f: mb_like}),
    building({id: ID.ARENA,         c: [1750,2250,1530, 240], k: 1.28, u: 1, cp:1, t:time( 5375),             e:4, y:2, b: {[ID.RALLY_POINT]:15}, f: p10}),
    building({id: ID.MAIN_BUILDING, c: [  70,  40,  60,  20], k: 1.28, u: 2, cp:2, t:time( 3875),             e:7, y:3, f: mb_like}),
    building({id: ID.RALLY_POINT,   c: [ 110, 160,  90,  70], k: 1.28, u: 1, cp:1, t:time( 3875),             e:13,y:2, f: id, s: SLOT.RALLY}),
    building({id: ID.MARKETPLACE,   c: [  80,  70, 120,  70], k: 1.28, u: 4, cp:3, t:time( 3675),             e:14,y:3, b: {[ID.MAIN_BUILDING]:3, [ID.WAREHOUSE]:1, [ID.GRANARY]:1}, f: id}),
    building({id: ID.EMBASSY,       c: [ 180, 130, 150,  80], k: 1.28, u: 3, cp:4, t:time( 3875),             e:8, y:3, b: {[ID.MAIN_BUILDING]:1}, f: id}),
    building({id: ID.BARRACKS,      c: [ 210, 140, 260, 120], k: 1.28, u: 4, cp:1, t:time( 3875),             e:7, y:2, b: {[ID.MAIN_BUILDING]:3, [ID.RALLY_POINT]:1}, f: train}),

10. UNIT INTERFACE:
===================

Ready to extract this data into our extension!
